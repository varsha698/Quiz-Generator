apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: quizmaster
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: quizmaster-secrets
              key: mongodb-password
        - name: MONGO_INITDB_DATABASE
          value: "quizmaster"
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-init
        configMap:
          name: mongodb-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: quizmaster
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: quizmaster
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: quizmaster
data:
  mongo-init.js: |
    // MongoDB initialization script
    db = db.getSiblingDB('quizmaster');
    
    // Create collections
    db.createCollection('quizzes');
    db.createCollection('quizattempts');
    db.createCollection('users');
    
    // Create indexes
    db.quizzes.createIndex({ "createdBy": 1 });
    db.quizzes.createIndex({ "category": 1 });
    db.quizzes.createIndex({ "difficulty": 1 });
    db.quizzes.createIndex({ "isPublic": 1 });
    db.quizzes.createIndex({ "createdAt": -1 });
    
    db.quizattempts.createIndex({ "userId": 1 });
    db.quizattempts.createIndex({ "quizId": 1 });
    db.quizattempts.createIndex({ "submittedAt": -1 });
    
    db.users.createIndex({ "email": 1 }, { unique: true });
    db.users.createIndex({ "username": 1 }, { unique: true });
    
    print("Database initialized successfully!");
