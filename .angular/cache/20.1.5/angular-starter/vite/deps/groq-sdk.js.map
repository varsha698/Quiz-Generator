{
  "version": 3,
  "sources": ["../../../../../../node_modules/groq-sdk/version.mjs", "../../../../../../node_modules/groq-sdk/_shims/registry.mjs", "../../../../../../node_modules/groq-sdk/_shims/MultipartBody.mjs", "../../../../../../node_modules/groq-sdk/_shims/web-runtime.mjs", "../../../../../../node_modules/groq-sdk/_shims/index.mjs", "../../../../../../node_modules/groq-sdk/error.mjs", "../../../../../../node_modules/groq-sdk/lib/streaming.mjs", "../../../../../../node_modules/groq-sdk/uploads.mjs", "../../../../../../node_modules/groq-sdk/core.mjs", "../../../../../../node_modules/groq-sdk/resource.mjs", "../../../../../../node_modules/groq-sdk/resources/audio/speech.mjs", "../../../../../../node_modules/groq-sdk/resources/audio/transcriptions.mjs", "../../../../../../node_modules/groq-sdk/resources/audio/translations.mjs", "../../../../../../node_modules/groq-sdk/resources/audio/audio.mjs", "../../../../../../node_modules/groq-sdk/resources/batches.mjs", "../../../../../../node_modules/groq-sdk/resources/chat/completions.mjs", "../../../../../../node_modules/groq-sdk/resources/chat/chat.mjs", "../../../../../../node_modules/groq-sdk/resources/completions.mjs", "../../../../../../node_modules/groq-sdk/resources/embeddings.mjs", "../../../../../../node_modules/groq-sdk/resources/files.mjs", "../../../../../../node_modules/groq-sdk/resources/models.mjs", "../../../../../../node_modules/groq-sdk/index.mjs"],
  "sourcesContent": ["export const VERSION = '0.32.0'; // x-release-please-version\n", "export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'groq-sdk/shims/${shims.kind}'\\` before importing anything else from groq-sdk`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'groq-sdk/shims/${shims.kind}'\\` after \\`import 'groq-sdk/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n", "import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import â€¦ from 'groq-sdk'\\`:\n- \\`import 'groq-sdk/shims/node'\\` (if you're running on Node)\n- \\`import 'groq-sdk/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/groq/groq-typescript#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'groq-sdk/_shims/auto/runtime';\nexport const init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nexport * from './registry.mjs';\n\ninit();\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class GroqError extends Error {\n}\nexport class APIError extends GroqError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.error = error;\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse;\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\n", "import { ReadableStream } from \"../_shims/index.mjs\";\nimport { GroqError } from \"../error.mjs\";\nimport { APIError } from \"../error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        const decoder = new SSEDecoder();\n        async function* iterMessages() {\n            if (!response.body) {\n                controller.abort();\n                throw new GroqError(`Attempted to iterate over a response with no body`);\n            }\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(response.body);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    const sse = decoder.decode(line);\n                    if (sse)\n                        yield sse;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                const sse = decoder.decode(line);\n                if (sse)\n                    yield sse;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of iterMessages()) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || sse.event === 'error') {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(data.error.status_code, data.error, data.error.message, undefined);\n                        }\n                        yield data;\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new GroqError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new GroqError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new GroqError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n", "import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _APIClient_baseURLOverridden, _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./lib/streaming.mjs\";\nimport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init, } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props), props));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\n     * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n     * - `import 'groq-sdk/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\n     * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n     * - `import 'groq-sdk/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, baseURLOverridden, maxRetries = 2, timeout = 60000, // 1 minute\n    httpAgent, fetch: overriddenFetch, }) {\n        _APIClient_baseURLOverridden.set(this, void 0);\n        this.baseURL = baseURL;\n        __classPrivateFieldSet(this, _APIClient_baseURLOverridden, baseURLOverridden, \"f\");\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            ...(['head', 'get'].includes(opts.method) ? {} : { 'Content-Type': 'application/json' }),\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!inputOptions.idempotencyKey)\n                inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining,\n        });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _APIClient_baseURLOverridden, \"f\") && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new GroqError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\n_APIClient_baseURLOverridden = new WeakMap();\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new GroqError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    defaultBaseURL: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new GroqError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new GroqError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new GroqError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`Groq:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new GroqError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'The quick brown fox jumped over the lazy dog',\n     *   model: 'playai-tts',\n     *   voice: 'Fritz-PlayAI',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'audio/wav', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    /**\n     * Transcribes audio into the input language.\n     *\n     * @example\n     * ```ts\n     * const transcription =\n     *   await client.audio.transcriptions.create({\n     *     model: 'whisper-large-v3-turbo',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/transcriptions', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    /**\n     * Translates audio into English.\n     *\n     * @example\n     * ```ts\n     * const translation = await client.audio.translations.create({\n     *   model: 'whisper-large-v3-turbo',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/audio/translations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.speech = new SpeechAPI.Speech(this._client);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n    }\n}\nAudio.Speech = Speech;\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests.\n     * [Learn more](/docs/batch).\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/openai/v1/batches/${batchId}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(options) {\n        return this._client.get('/openai/v1/batches', options);\n    }\n    /**\n     * Cancels a batch.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/openai/v1/batches/${batchId}/cancel`, options);\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/openai/v1/chat/completions', {\n            body,\n            ...options,\n            stream: body.stream ?? false,\n        });\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nimport { Completions, } from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'nomic-embed-text-v1_5',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/embeddings', { body, ...options });\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints.\n     *\n     * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n     * has a specific required [format](/docs/batch).\n     *\n     * Please contact us if you need to increase these storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/openai/v1/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(options) {\n        return this._client.get('/openai/v1/files', options);\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileId, options) {\n        return this._client.delete(`/openai/v1/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/openai/v1/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns information about a file.\n     */\n    info(fileId, options) {\n        return this._client.get(`/openai/v1/files/${fileId}`, options);\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Get a specific model\n     */\n    retrieve(model, options) {\n        return this._client.get(`/openai/v1/models/${model}`, options);\n    }\n    /**\n     * get all available models\n     */\n    list(options) {\n        return this._client.get('/openai/v1/models', options);\n    }\n    /**\n     * Delete a model\n     */\n    delete(model, options) {\n        return this._client.delete(`/openai/v1/models/${model}`, options);\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Groq_instances, _a, _Groq_baseURLOverridden;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\n/**\n * API Client for interfacing with the Groq API.\n */\nexport class Groq extends Core.APIClient {\n    /**\n     * API Client for interfacing with the Groq API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\n     * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('GROQ_BASE_URL'), apiKey = Core.readEnv('GROQ_API_KEY'), ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.GroqError(\"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            ...opts,\n            baseURL: baseURL || `https://api.groq.com`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.GroqError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ apiKey, dangerouslyAllowBrowser: true })\");\n        }\n        super({\n            baseURL: options.baseURL,\n            baseURLOverridden: baseURL ? baseURL !== 'https://api.groq.com' : false,\n            timeout: options.timeout ?? 60000 /* 1 minute */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        _Groq_instances.add(this);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.audio = new API.Audio(this);\n        this.models = new API.Models(this);\n        this.batches = new API.Batches(this);\n        this.files = new API.Files(this);\n        this._options = options;\n        this.apiKey = apiKey;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = Groq, _Groq_instances = new WeakSet(), _Groq_baseURLOverridden = function _Groq_baseURLOverridden() {\n    return this.baseURL !== 'https://api.groq.com';\n};\nGroq.Groq = _a;\nGroq.DEFAULT_TIMEOUT = 60000; // 1 minute\nGroq.GroqError = Errors.GroqError;\nGroq.APIError = Errors.APIError;\nGroq.APIConnectionError = Errors.APIConnectionError;\nGroq.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nGroq.APIUserAbortError = Errors.APIUserAbortError;\nGroq.NotFoundError = Errors.NotFoundError;\nGroq.ConflictError = Errors.ConflictError;\nGroq.RateLimitError = Errors.RateLimitError;\nGroq.BadRequestError = Errors.BadRequestError;\nGroq.AuthenticationError = Errors.AuthenticationError;\nGroq.InternalServerError = Errors.InternalServerError;\nGroq.PermissionDeniedError = Errors.PermissionDeniedError;\nGroq.UnprocessableEntityError = Errors.UnprocessableEntityError;\nGroq.toFile = Uploads.toFile;\nGroq.fileFromPath = Uploads.fileFromPath;\nGroq.Completions = Completions;\nGroq.Chat = Chat;\nGroq.Embeddings = Embeddings;\nGroq.Audio = Audio;\nGroq.Models = Models;\nGroq.Batches = Batches;\nGroq.Files = Files;\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default Groq;\n"],
  "mappings": "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",
  "names": ["fetch", "Request", "Response", "Headers", "FormData", "Blob", "File", "ReadableStream", "iter", "ReadableStream", "File", "FormData", "kind", "fetch", "opts", "retryMessage", "init", "_a", "Completions", "_a", "Completions", "_Groq_baseURLOverridden"]
}
