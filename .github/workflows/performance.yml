name: Performance Testing

on:
  schedule:
    - cron: '0 3 * * 0' # Weekly on Sunday at 3 AM
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci

    - name: Build application
      run: |
        npm run build:prod
        cd backend && npm run build

    - name: Start application
      run: |
        cd backend && npm start &
        sleep 10
        npm start &
        sleep 15

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  load-test:
    name: Load Testing
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci

    - name: Build application
      run: |
        npm run build:prod
        cd backend && npm run build

    - name: Start application
      run: |
        cd backend && npm start &
        sleep 10
        npm start &
        sleep 15

    - name: Install Artillery
      run: npm install -g artillery

    - name: Run load tests
      run: |
        artillery run load-tests/load-test.yml
        artillery run load-tests/stress-test.yml

    - name: Upload load test results
      uses: actions/upload-artifact@v3
      with:
        name: load-test-results
        path: |
          load-test-results.json
          stress-test-results.json

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build with bundle analysis
      run: |
        npm run build:prod:stats

    - name: Analyze bundle
      run: |
        npx webpack-bundle-analyzer dist/stats.json --mode static --report bundle-report.html

    - name: Upload bundle report
      uses: actions/upload-artifact@v3
      with:
        name: bundle-analysis
        path: |
          bundle-report.html
          dist/stats.json

  memory-test:
    name: Memory Usage Testing
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci

    - name: Run memory tests
      run: |
        node --max-old-space-size=4096 node_modules/.bin/jest --testNamePattern="memory" --verbose
        cd backend && node --max-old-space-size=4096 node_modules/.bin/jest --testNamePattern="memory" --verbose

  performance-budget:
    name: Performance Budget Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build:prod

    - name: Check performance budget
      run: |
        npx bundlesize
      env:
        CI: true
        BUNDLESIZE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
